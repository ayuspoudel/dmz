name: Package dotmanz Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-and-package:
    name: Build and Create Release Archive
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install audit tool
        run: cargo install cargo-audit

      - name: Run cargo audit (vulnerability check)
        run: cargo audit

      - name: Build universal binary for macOS
        run: |
          rustup target add aarch64-apple-darwin x86_64-apple-darwin
          mkdir -p target/universal
          cargo build --release --target aarch64-apple-darwin
          cargo build --release --target x86_64-apple-darwin
          lipo -create -output target/universal/dot \
            target/aarch64-apple-darwin/release/dot \
            target/x86_64-apple-darwin/release/dot

      - name: Prepare release directory
        run: |
          mkdir -p package/dotmanz-${{ github.ref_name }}
          cp target/universal/dot package/dotmanz-${{ github.ref_name }}/
          cp install.sh package/dotmanz-${{ github.ref_name }}/
          cp README.md package/dotmanz-${{ github.ref_name }}/ || true
          cp -r zsh package/dotmanz-${{ github.ref_name }}/

      - name: Create tar.gz archive
        run: |
          cd package
          tar -czf dotmanz-${{ github.ref_name }}.tar.gz dotmanz-${{ github.ref_name }}

      - name: Generate dynamic release notes
        run: |
          TAG=${{ github.ref_name }}
          if [ -f CHANGELOG.md ]; then
            awk "/^## $TAG/{flag=1; next} /^## /{flag=0} flag" CHANGELOG.md > body.md
            if [ -s body.md ]; then
              echo "Using changelog section for $TAG"
            else
              echo "## dotmanz $TAG" > body.md
              git log --oneline $(git describe --tags --abbrev=0 HEAD^)..HEAD >> body.md
              echo "Using git log fallback"
            fi
          else
            echo "## dotmanz $TAG" > body.md
            echo "- Built from commit ${{ github.sha }}" >> body.md
            echo "- Includes ZSH modules and binary" >> body.md
            echo "Using static fallback notes"
          fi

      - name: Create GitHub Release and upload asset
        uses: softprops/action-gh-release@v1
        with:
          name: dotmanz ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          body_path: body.md
          files: package/dotmanz-${{ github.ref_name }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
