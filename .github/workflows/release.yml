name: Release dmz

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Build and Release Archive
    runs-on: macos-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Clean build cache
        run: cargo clean
      - name: Remove Cargo.lock (optional)
        run: rm -f Cargo.lock
      - name: Build universal macOS binary
        run: |
          rustup target add aarch64-apple-darwin x86_64-apple-darwin
          mkdir -p target/universal
          cargo build --release --target aarch64-apple-darwin
          cargo build --release --target x86_64-apple-darwin
          lipo -create -output target/universal/dmz \
            target/aarch64-apple-darwin/release/dmz \
            target/x86_64-apple-darwin/release/dmz
      
      - name: Patch install.sh with current version
        run: |
          version=${{ github.ref_name }}
          sed -i '' "s/VERSION:-v[0-9.]*/VERSION:-$version/" install.sh

      - name: Generate ZSH completions
        run: |
          mkdir -p target/completions
          ./target/universal/dmz completions zsh > target/completions/_dmz

      - name: Prepare release directory
        run: |
          mkdir -p package/dmz-${{ github.ref_name }}/completions
          cp target/universal/dmz package/dmz-${{ github.ref_name }}/
          cp install.sh package/dmz-${{ github.ref_name }}/
          cp README.md package/dmz-${{ github.ref_name }}/ || true
          cp -r zsh package/dmz-${{ github.ref_name }}/
          cp target/completions/_dmz package/dmz-${{ github.ref_name }}/completions/

      - name: Create release tar.gz
        run: |
          cd package
          tar -czf dmz-${{ github.ref_name }}.tar.gz dmz-${{ github.ref_name }}

      - name: Generate release notes
        run: |
          TAG=${{ github.ref_name }}
          if [ -f CHANGELOG.md ]; then
            awk "/^## $TAG/{flag=1; next} /^## /{flag=0} flag" CHANGELOG.md > body.md
            if [ ! -s body.md ]; then
              echo "## dmz $TAG" > body.md
              git log --oneline $(git describe --tags --abbrev=0 HEAD^)..HEAD >> body.md
            fi
          else
            echo "## dmz $TAG" > body.md
            echo "- Built from commit ${{ github.sha }}" >> body.md
          fi

      - name: Upload GitHub release
        uses: softprops/action-gh-release@v1
        with:
          name: dmz ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          body_path: body.md
          files: package/dmz-${{ github.ref_name }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
