private.zsh
# Do not track secrets
zsh/private.zsh
# VSCode
.vscode/

test-env
# OS
.DS_Store
# Rust
/cli/target
**/*.rs.bk
Cargo.lock

# Compiled files
/target/
**/*.rs.bk

# Backup files
*.bak
*.tmp
*.swp
*.swo
*~

# Logs and debug files
*.log

# Cargo package backups
Cargo.lock

# Executables (if built manually or copied)
dotmanz
dotmanz.exe

# MacOS-specific metadata
.DS_Store

# Python AI directory (if you're keeping AI in same repo)
ai/__pycache__/
ai/models/
*.pyc

# VSCode config
.vscode/

# === Rust build artifacts ===
/dot/target/
**/*.rs.bk
**/*.rs~  # temporary files
Cargo.lock

# === Rust coverage/test output ===
/dot/coverage/
**/*.profraw

# === Editor config ===
.vscode/
.idea/
*.swp
*.swo
*.bak
*.tmp

# === macOS system ===
.DS_Store
.AppleDouble
.LSOverride

# === ZSH / Shell ===
.zsh_history
.zshrc.bak*
.dotmanz/

# === Installer log ===
install.log

# === Ignore compiled CLI output ===
/dot/dot
dmz
dmz.exe
.dmz/


# === Ignore terraform  ===
# Ignore Terraform state files
terraform/*.tfstate
terraform/*.tfstate.*
terraform/.terraform/
terraform/.terraform.lock.hcl
terraform/crash.log
terraform/override.tf
terraform/override.tf.json
terraform/*.tfplan

# Terraform local files and state
.deployment/**/.terraform/
.deployment/**/.terraform.lock.hcl
.deployment/**/terraform.tfstate
.deployment/**/terraform.tfstate.backup
.deployment/**/*.tfplan

# Ignore SSH keys if ever created dynamically
.deployment/**/dmz-key*
!.deployment/**/dmz-key.pub  # Only allow pubkey if needed

# Rust target and build artifacts
/target/
**/*.rs.bk

# IDE/editor junk
*.swp
*.swo
*.DS_Store
.idea/
.vscode/

# Logs and temp files
*.log
*.tmp
*.bak

# Node/npm (just in case future additions)
/node_modules/

# Backup files
*~
